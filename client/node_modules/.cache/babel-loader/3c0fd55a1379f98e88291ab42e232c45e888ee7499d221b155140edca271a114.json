{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthProvider } from \"../context/AuthContext\";\nexport const useLogin = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login: setAuthUser\n  } = useContext(AuthProvider);\n  const login = async ({\n    username,\n    password\n  }) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        alert(\"login Failed\");\n        return;\n      }\n      const data = await response.json();\n      alert(\"login succefully\");\n      navigate(\"/home\");\n    } catch (error) {\n      console.error(error);\n      alert(error.message);\n    }\n  };\n  return {\n    login\n  };\n};\n_s(useLogin, \"xCiYs01CsSu6ehgQf9acZHJi6+Y=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["React","useContext","useNavigate","AuthProvider","useLogin","_s","navigate","login","setAuthUser","username","password","response","fetch","method","headers","credentials","body","JSON","stringify","ok","errorData","json","alert","data","error","console","message"],"sources":["D:/Projects/react-simple-auth/client/src/hooks/useLogin.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthProvider } from \"../context/AuthContext\";\r\n\r\nexport const useLogin = () => {\r\n  const navigate = useNavigate();\r\n  const { login: setAuthUser } = useContext(AuthProvider);\r\n\r\n  const login = async ({ username, password }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(\"login Failed\");\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      alert(\"login succefully\");\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  return { login };\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,wBAAwB;AAErD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEK,KAAK,EAAEC;EAAY,CAAC,GAAGP,UAAU,CAACE,YAAY,CAAC;EAEvD,MAAMI,KAAK,GAAG,MAAAA,CAAO;IAAEE,QAAQ;IAAEC;EAAS,CAAC,KAAK;IAC9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCC,KAAK,CAAC,cAAc,CAAC;QACrB;MACF;MAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCC,KAAK,CAAC,kBAAkB,CAAC;MACzBhB,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBF,KAAK,CAACE,KAAK,CAACE,OAAO,CAAC;IACtB;EACF,CAAC;EAED,OAAO;IAAEnB;EAAM,CAAC;AAClB,CAAC;AAACF,EAAA,CA7BWD,QAAQ;EAAA,QACFF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}