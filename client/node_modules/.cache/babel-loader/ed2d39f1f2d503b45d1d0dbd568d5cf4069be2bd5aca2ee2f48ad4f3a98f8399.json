{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nexport const useAuth = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login: setAuthUser,\n    logout: setAuthUserLogout\n  } = useContext(AuthContext);\n  const login = async ({\n    username,\n    password\n  }) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        alert((errorData === null || errorData === void 0 ? void 0 : errorData.message) || \"Login failed\");\n        return;\n      }\n      const data = await response.json();\n      setAuthUser(data);\n      alert(\"Login successful\");\n      navigate(\"/home\");\n    } catch (error) {\n      console.error(error);\n      alert(error.message);\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await fetch(\"http://localhost:5000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        alert((errorData === null || errorData === void 0 ? void 0 : errorData.message) || \"Registration failed\");\n        return;\n      }\n      alert(\"Registration successful\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const logout = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/auth/logout\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\"\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        alert((errorData === null || errorData === void 0 ? void 0 : errorData.message) || \"Logout failed\");\n        return;\n      }\n      setAuthUser(null);\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"An error occurred during logout\");\n      console.log(error);\n    }\n  };\n  return {\n    login,\n    register,\n    logout\n  };\n};\n_s(useAuth, \"fwXptJVSsZ2DHiOQbruPSjbLS98=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useContext","useNavigate","AuthContext","useAuth","_s","navigate","login","setAuthUser","logout","setAuthUserLogout","username","password","response","fetch","method","headers","credentials","body","JSON","stringify","ok","errorData","json","alert","message","data","error","console","register","userData","log"],"sources":["D:/Projects/react-simple-auth/client/src/hooks/useAuth.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const useAuth = () => {\r\n  const navigate = useNavigate();\r\n  const { login: setAuthUser, logout: setAuthUserLogout } =\r\n    useContext(AuthContext);\r\n\r\n  const login = async ({ username, password }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(errorData?.message || \"Login failed\");\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      setAuthUser(data);\r\n      alert(\"Login successful\");\r\n      navigate(\"/home\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(errorData?.message || \"Registration failed\");\r\n        return;\r\n      }\r\n      alert(\"Registration successful\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/auth/logout\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(errorData?.message || \"Logout failed\");\r\n        return;\r\n      }\r\n\r\n      setAuthUser(null);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      alert(\"An error occurred during logout\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return { login, register, logout };\r\n};\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEK,KAAK,EAAEC,WAAW;IAAEC,MAAM,EAAEC;EAAkB,CAAC,GACrDT,UAAU,CAACE,WAAW,CAAC;EAEzB,MAAMI,KAAK,GAAG,MAAAA,CAAO;IAAEI,QAAQ;IAAEC;EAAS,CAAC,KAAK;IAC9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,QAAQ;UAAEC;QAAS,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCC,KAAK,CAAC,CAAAF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,OAAO,KAAI,cAAc,CAAC;QAC3C;MACF;MAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClCf,WAAW,CAACkB,IAAI,CAAC;MACjBF,KAAK,CAAC,kBAAkB,CAAC;MACzBlB,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBH,KAAK,CAACG,KAAK,CAACF,OAAO,CAAC;IACtB;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,QAAQ;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACjB,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCC,KAAK,CAAC,CAAAF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,OAAO,KAAI,qBAAqB,CAAC;QAClD;MACF;MACAD,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACG,GAAG,CAACJ,KAAK,CAACF,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMhB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACJ,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCC,KAAK,CAAC,CAAAF,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEG,OAAO,KAAI,eAAe,CAAC;QAC5C;MACF;MAEAjB,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdH,KAAK,CAAC,iCAAiC,CAAC;MACxCI,OAAO,CAACG,GAAG,CAACJ,KAAK,CAAC;IACpB;EACF,CAAC;EAED,OAAO;IAAEpB,KAAK;IAAEsB,QAAQ;IAAEpB;EAAO,CAAC;AACpC,CAAC;AAACJ,EAAA,CAzEWD,OAAO;EAAA,QACDF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}